<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.punch.dao.SysConfigMapper">
  <resultMap id="BaseResultMap" type="com.example.punch.model.SysConfig">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="config_value" jdbcType="VARCHAR" property="configValue" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="created_id" jdbcType="INTEGER" property="createdId" />
    <result column="created_time" jdbcType="BIGINT" property="createdTime" />
    <result column="updated_id" jdbcType="INTEGER" property="updatedId" />
    <result column="updated_time" jdbcType="BIGINT" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, config_name, config_value, `status`, is_del, created_id, created_time, updated_id, 
    updated_time
  </sql>
  <select id="selectByExample" parameterType="com.example.punch.model.example.SysConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0 and limitEnd &gt;= 0">
      limit ${limitStart}, ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.punch.model.example.SysConfigExample">
    delete from sys_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.punch.model.SysConfig">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_config (config_name, config_value, `status`, 
      is_del, created_id, created_time, 
      updated_id, updated_time)
    values (#{configName,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{isDel,jdbcType=TINYINT}, #{createdId,jdbcType=INTEGER}, #{createdTime,jdbcType=BIGINT}, 
      #{updatedId,jdbcType=INTEGER}, #{updatedTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.punch.model.SysConfig">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        config_name,
      </if>
      <if test="configValue != null">
        config_value,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createdId != null">
        created_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedId != null">
        updated_id,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdId != null">
        #{createdId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedId != null">
        #{updatedId,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.punch.model.example.SysConfigExample" resultType="java.lang.Long">
    select count(*) from sys_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configName != null">
        config_name = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.configValue != null">
        config_value = #{record.configValue,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.createdId != null">
        created_id = #{record.createdId,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=BIGINT},
      </if>
      <if test="record.updatedId != null">
        updated_id = #{record.updatedId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_config
    set id = #{record.id,jdbcType=INTEGER},
      config_name = #{record.configName,jdbcType=VARCHAR},
      config_value = #{record.configValue,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      is_del = #{record.isDel,jdbcType=TINYINT},
      created_id = #{record.createdId,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=BIGINT},
      updated_id = #{record.updatedId,jdbcType=INTEGER},
      updated_time = #{record.updatedTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.punch.model.SysConfig">
    update sys_config
    <set>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdId != null">
        created_id = #{createdId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedId != null">
        updated_id = #{updatedId,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.punch.model.SysConfig">
    update sys_config
    set config_name = #{configName,jdbcType=VARCHAR},
      config_value = #{configValue,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      is_del = #{isDel,jdbcType=TINYINT},
      created_id = #{createdId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=BIGINT},
      updated_id = #{updatedId,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>